name: Deploy to EKS

on:
  push:
    branches:
      - main   # or your deployment branch

permissions:
  id-token: write   # required for OIDC
  contents: read    # required to clone repo

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:   # âœ… define environment variables here
      AWS_REGION: us-east-1
      ECR_REPO: backend-service     # ðŸ‘ˆ choose your repo name (must exist in ECR)
      EKS_CLUSTER_NAME: myproject-eks

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Authenticate with AWS using OIDC (no static secrets needed!)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      # Login to ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Build, tag, and push Docker image
      - name: Build and Push Docker image
        run: |
          IMAGE_TAG=${{ github.sha }}
          docker build -t $ECR_REPO:$IMAGE_TAG .
          docker tag $ECR_REPO:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/$ECR_REPO:$IMAGE_TAG
          docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPO:$IMAGE_TAG

      # Update kubeconfig for EKS
      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

      # Deploy to Kubernetes
      - name: Deploy to EKS
        run: |
          kubectl set image deployment/my-backend-app my-backend-container=${{ steps.login-ecr.outputs.registry }}/$ECR_REPO:${{ github.sha }}
          kubectl rollout status deployment/my-backend-app
