name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  ECR_REPO: my-backend-repo
  EKS_CLUSTER_NAME: myproject-eks

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
    # 1Ô∏è‚É£ Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # 2Ô∏è‚É£ Configure AWS credentials via OIDC
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ${{ env.AWS_REGION }}

    # 3Ô∏è‚É£ Login to ECR
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    # 4Ô∏è‚É£ Build & Push Docker image
    - name: Build and Push Docker image
      run: |
        IMAGE_TAG=${GITHUB_SHA}
        IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/$ECR_REPO:$IMAGE_TAG
        echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
        docker build -t $IMAGE_URI .
        docker push $IMAGE_URI

    # 5Ô∏è‚É£ Setup Terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    # 6Ô∏è‚É£ Terraform init
    - name: Terraform Init
      working-directory: infra
      run: terraform init

    # 7Ô∏è‚É£ Terraform apply
    - name: Terraform Apply
      working-directory: infra
      run: terraform apply -auto-approve -var-file="terraform.tfvars"

    # 8Ô∏è‚É£ Export EKS cluster name from Terraform output
    - name: Get Terraform outputs
      id: tf-outputs
      working-directory: infra
      run: |
        echo "EKS_CLUSTER_NAME=$(terraform output -raw eks_cluster_name)" >> $GITHUB_ENV

    # 9Ô∏è‚É£ Install kubectl
    - name: Install kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/

    # üîü Update kubeconfig
    - name: Configure kubectl
      run: |
        aws eks --region $AWS_REGION update-kubeconfig --name $EKS_CLUSTER_NAME

    # 1Ô∏è‚É£1Ô∏è‚É£ Deploy Kubernetes manifests
    - name: Deploy to EKS
      run: |
        kubectl set image deployment/backend backend=$IMAGE_URI -n default || true
        kubectl apply -f k8s/
